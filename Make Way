using System;
using System.Collections.Generic; 
using System.Data;
using System.Data.SqlClient; using System.Linq;
using System.Web; using System.Web.UI;
using System.Web.UI.WebControls;  
namespace FourGames
{    
public partial class MakeWay : System.Web.UI.Page    
{      
SqlConnection con = new SqlConnection(@"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=C:\Users\97155\Desktop\FourGames\FourGames\App_Data\Database1.mdf;Integrated Security=True");  
protected void Page_Load(object sender, EventArgs e)
{          
if (!IsPostBack)         
{             
if (Session["type"] == "User")     
{              
}        
else          
{            
Response.Redirect("Login.aspx");   
}         
}   
}      
protected void Timer1_Tick(object sender, EventArgs e)   
{       
if (flag.Value == "true")        
{            
if (Label1.Text != "Time Expired")      
{            
int count = Convert.ToInt32(Label1.Text);      
if (count > 1)          
{              
count--;      
Label1.Text = count.ToString();     
}             
else         
{              
Label1.Text = "Time Expired";      
scoretitle.Text = "Total Scored";        
gameexpired.Value = "true";       
int id;                   
string sel = "select top 1 id from GameScore order by id desc";    
SqlDataAdapter da = new SqlDataAdapter(sel, con);              
DataSet ds = new DataSet();                
da.Fill(ds);                   
int i = ds.Tables[0].Rows.Count;        
if (i > 0)                    
{                
id = Convert.ToInt32(ds.Tables[0].Rows[0][0]) + 1;        
}                         
else                
{                 
id = 1;             
}               
string ins = "Insert into GameScore (id,userid,score,gameno,date,time) values ('" + id + "','" + Session["userid"].ToString() + "','" + labelscore.Text + "','4','" + DateTime.Now.ToString("yyyy-MM-dd") + "','" + DateTime.Now.ToString("h:mm:ss tt") + "')";   
SqlCommand cmd = new SqlCommand(ins, con);    
con.Open();                 
cmd.ExecuteNonQuery();        
con.Close();                   
}           
}                
else    
{            
Timer1.Enabled = false;         
}            
}     
}      
protected void Timer2_Tick(object sender, EventArgs e)    
{       
Timer2.Enabled = false;    
string[] bomblist = hfbomblist.Value.Split(',');         
int j = 0;         
while (j < bomblist.Length - 1)     
{             
Image img = this.Master.FindControl("ContentPlaceHolder1").FindControl("Image" + bomblist[j]) as Image;     
img.ImageUrl = "";        
j++;          
}       
}       
public void btnstart_Click(object sender, EventArgs e)  
{       
string[] pathslist = hfaddeddid.Value.Split(',');       
int z = 0;        
while (z < pathslist.Length - 1)       
{                 
Panel l = this.Master.FindControl("ContentPlaceHolder1").FindControl(pathslist[z]) as Panel;     
l.BackColor = System.Drawing.Color.White;     
z++;      
}       
string[] pathslist1 = hfaddeddid.Value.Split(',');      
int y = 0;          
while (y < pathslist1.Length - 1)       
{            
Panel l = this.Master.FindControl("ContentPlaceHolder1").FindControl(pathslist1[y]) as Panel;     
l.BackColor = System.Drawing.Color.White;        
y++;        
}          
hfnextpaths.Value = "";         
btndiv.Visible = false;         
matrixdiv.Visible = true;        
Random rand = new Random();         
int index = rand.Next(11);        
string selectcmd = "SELECT * FROM SecurePaths where Id='" + index + "'";   
SqlCommand cmd = new SqlCommand(selectcmd, con);        
con.Open();      
SqlDataReader dr = cmd.ExecuteReader();       
if (dr.HasRows)         
{               
dr.Read();      
string temp = dr[1].ToString();      
string[] pathlist = temp.Split(',');         
int lastelement = pathlist.Length - 1;           
string f_element = pathlist[0].ToString();         
string l_element = pathlist[lastelement].ToString();        
hflastelement.Value = l_element;            
Image imgstart = this.Master.FindControl("ContentPlaceHolder1").FindControl("Image" + f_element) as Image;                 imgstart.ImageUrl = "images/startsymbol.png";         
//Panel first = this.Master.FindControl("ContentPlaceHolder1").FindControl(f_element) as Panel;          
//first.BackColor = System.Drawing.Color.Red;                
//Panel last = this.Master.FindControl("ContentPlaceHolder1").FindControl(l_element) as Panel;   
//last.BackColor = System.Drawing.Color.Green;             
Image imgend = this.Master.FindControl("ContentPlaceHolder1").FindControl("Image" + l_element) as Image;           
imgend.ImageUrl = "images/end.jpg";       
string bombs = "";           
string[] authors = { "A1", "A2", "A3", "A4", "A5", "A6", "B1", "B2", "B3", "B4", "B5", "B6", "C1", "C2", "C3", "C4", "C5", "C6", "D1", "D2", "D3", "D4", "D5", "D6", "E1", "E2", "E3", "E4", "E5", "E6", "F1", "F2", "F3", "F4", "F5", "F6" };      
int i = 0;         
while (i < 13)        
{             
Random rand1 = new Random();     
int number = rand1.Next(authors.Length);      
string check = authors[number];      
if (temp.Contains(check) == false)             
{                  
if (bombs.Contains(check) == false)        
{                
bombs += check + ",";    
i++;                    
}              
}     
}     
hfbomblist.Value = bombs;        
string[] bomblist = bombs.Split(',');       
int j = 0;          
while (j < bomblist.Length - 1)     
{            
//Panel l = this.Master.FindControl("ContentPlaceHolder1").FindControl(bomblist[j]) as Panel;     
//l.BackColor = System.Drawing.Color.Black;
Image img = this.Master.FindControl("ContentPlaceHolder1").FindControl("Image"+bomblist[j]) as Image;      
img.ImageUrl = "images/bomb3.jpg";             
j++;         
}               
char[] chars = f_element.ToCharArray();     
int ablphabet = ((int)chars[0]);          
int unicode = ablphabet - 1;         
char upalphabet = (char)unicode;              
int code = ablphabet + 1;           
char downalphabet = (char)code;         
string ln = chars[1].ToString();       
int lnn = Convert.ToInt32(ln);              
int leftnum = lnn - 1;            
string rn = chars[1].ToString();      
int r = Convert.ToInt32(rn);            
int rightnum = r + 1;             
string upvalue = upalphabet + chars[1].ToString();      
string leftvalue =chars[0].ToString() + leftnum;      
string rightvalue = chars[0].ToString() + rightnum;     
string downvalue = downalphabet + chars[1].ToString();      
var myList = new List<string>();           
// Add items to the list             
myList.Add(upvalue);          
myList.Add(leftvalue);       
myList.Add(rightvalue);             
myList.Add(downvalue);           
// Convert to array               
var myArray = myList.ToArray();      
String nextpaths = "";          
int k = 0;          
while (k < 4)          
{                 
if(myArray[k].Contains('@') == false && myArray[k].Contains('0') == false && myArray[k].Contains('7') == false && myArray[k].Contains('G') == false)                   
{                      
Panel l = this.Master.FindControl("ContentPlaceHolder1").FindControl(myArray[k]) as Panel;         
l.BackColor = System.Drawing.Color.LightBlue;         
string t = "ContentPlaceHolder1_" + myArray[k];          
l.Attributes.Add("OnClick", "divclick("+t+")");    
nextpaths += myArray[k] + ",";           
}               
k++;            
}            
hfnextpaths.Value = nextpaths;      
flag.Value = "true";            
Timer1.Enabled = true;        
Timer2.Enabled = true;    
ScriptManager.RegisterStartupScript(this, this.GetType(), "Javascript", "Addpathfunctions();", true);        
}       
con.Close();       
}         
public void btncheckdiv_Click(object sender, EventArgs e)        
{        
if (gameexpired.Value != "true")      
{                
string clickediv = hfclickedid.Value;         
clickediv = clickediv.Substring(20, 2);        
if (clickediv != hflastelement.Value)       
{                
if (hfbomblist.Value.Contains(clickediv) == false)           
{            
hfaddeddid.Value += clickediv + ",";    
string[] pathlist = hfnextpaths.Value.Split(',');             
int z = 0;    
while (z < pathlist.Length - 1)          
{                       
if (hfaddeddid.Value.Contains(pathlist[z]) == false)        
{                         
Panel l = this.Master.FindControl("ContentPlaceHolder1").FindControl(pathlist[z]) as Panel;    
l.BackColor = System.Drawing.Color.White;       
}                   
z++;                      
}                       
hfnextpaths.Value = "";             
Panel p = this.Master.FindControl("ContentPlaceHolder1").FindControl(clickediv) as Panel;      
p.BackColor = System.Drawing.Color.Green;       
char[] chars = clickediv.ToCharArray();       
int ablphabet = ((int)chars[0]);            
int unicode = ablphabet - 1;                 
char upalphabet = (char)unicode;                       
int code = ablphabet + 1;                      
char downalphabet = (char)code;               
string ln = chars[1].ToString();                 
int lnn = Convert.ToInt32(ln);                 
int leftnum = lnn - 1;              
string rn = chars[1].ToString(); 
int r = Convert.ToInt32(rn);               
int rightnum = r + 1;               
string upvalue = upalphabet + chars[1].ToString();      
string leftvalue = chars[0].ToString() + leftnum;           
string rightvalue = chars[0].ToString() + rightnum;             
string downvalue = downalphabet + chars[1].ToString();           
var myList = new List<string>();      
// Add items to the list             
myList.Add(upvalue);                 
myList.Add(leftvalue);               
myList.Add(rightvalue);           
myList.Add(downvalue);                
// Convert to array                
var myArray = myList.ToArray();        
String nextpaths = "";                   
int k = 0;                 
while (k < 4)               
{                       
if (myArray[k].Contains('@') == false && myArray[k].Contains('0') == false && myArray[k].Contains('7') == false && myArray[k].Contains('G') == false)       
{                           
if (hfaddeddid.Value.Contains(myArray[k]) == false)    
{                            
Panel l = this.Master.FindControl("ContentPlaceHolder1").FindControl(myArray[k]) as Panel;              
l.BackColor = System.Drawing.Color.LightBlue;      
string t = "ContentPlaceHolder1_" + myArray[k];           
l.Attributes.Add("OnClick", "divclick(" + t + ")");      
nextpaths += myArray[k] + ",";                  
}                         
}               
k++;           
}             
int u = 0;       
string[] presentpath = hfaddeddid.Value.Split(',');       
while (u < presentpath.Length - 2)          
{                        
Panel l = this.Master.FindControl("ContentPlaceHolder1").FindControl(presentpath[u]) as Panel;   
string t = "ContentPlaceHolder1_" + presentpath[u];               
l.Attributes.Remove("divclick(" + t + ")");        
u++;                 
}              
hfnextpaths.Value = nextpaths;           
int score = Convert.ToInt32(labelscore.Text);      
score += 5;             
labelscore.Text = score.ToString();        
}              
else               
{               
Image img = this.Master.FindControl("ContentPlaceHolder1").FindControl("Image" + clickediv) as Image;           
img.ImageUrl = "images/bomb3.jpg";                     
Label1.Text = "Time Expired";         
scoretitle.Text = "Total Scored";        
gameexpired.Value = "true";            
lbltotalscore.Text = labelscore.Text;           
int id;               
string sel = "select top 1 id from GameScore order by id desc";      
SqlDataAdapter da = new SqlDataAdapter(sel, con);                  
DataSet ds = new DataSet();          
da.Fill(ds);            
int i = ds.Tables[0].Rows.Count;         
if (i > 0)              
{              
id = Convert.ToInt32(ds.Tables[0].Rows[0][0]) + 1;      
}    
else                
{                  
id = 1;          
}              
string ins = "Insert into GameScore (id,userid,score,gameno,date,time) values ('" + id + "','" + Session["userid"].ToString() + "','" + labelscore.Text + "','4','" + DateTime.Now.ToString("yyyy-MM-dd") + "','" + DateTime.Now.ToString("h:mm:ss tt") + "')";     
SqlCommand cmd = new SqlCommand(ins, con);    
con.Open();                 
cmd.ExecuteNonQuery();  
con.Close();            
ScriptManager.RegisterStartupScript(this, this.GetType(), "Javascript", "gameover();", true);            
}           
}       
else       
{              
btnstart_Click(sender, e);          
}           
}      
}   
} 
